<?php

use Mpdf\Mpdf;
use Mpdf\HTMLParserMode;
use Mpdf\Output\Destination;

// Nombre de fichero por defecto
if (!isset($fileName)) {
    $fileName = "Reporte-de-$controller_name";
}

// Título por defecto
if (!isset($title)) {
    $title = "Reporte de $controller_name";
}

// CSS por defecto
if (!isset($css)) {
    $css = 'css/pdf.min.css';
}

// Destino
$destination = isset($download) && $download ? Destination::DOWNLOAD : Destination::INLINE;

//Activa el almacenamiento en búfer de la salida
ob_start();

?>
<!DOCTYPE html>
<html lang="en">

<head>
    <title><?= $title ?></title>
</head>

<body>
    <htmlpageheader name="myHeader1">
        <div class="title-header">
            <img src="img/kumbiaphp.svg" alt="Logo KumbiaPHP">
            <br>Powered by
        </div>
    </htmlpageheader>

    <?php View::content() ?>

    <htmlpagefooter name="myFooter1">
        <table class="table-footer">
            <tr>
                <td>{DATE d/m/Y}</td>
                <td style="text-align: right;">{PAGENO}/{nbpg}</td>
            </tr>
        </table>
    </htmlpagefooter>
</body>

</html>
<?php
$html = ob_get_clean();
ob_clean();

// Crea una instancia de la clase y le pasa el directorio temporal
$mpdf = new Mpdf(['tempDir' => APP_PATH . 'temp/mpdf']);

// Carga el CSS externo
$stylesheet = file_get_contents($css);
$mpdf->WriteHTML($stylesheet, HTMLParserMode::HEADER_CSS);

// Escribe el contenido HTML (Template + View):
$mpdf->WriteHTML($html);

// Genera el PDF, ya sea para su descarga o visualización en el navegador
$mpdf->Output("$fileName.pdf", $destination);
